PegasusOS
===========

Getting Started
---------------

To get started with Android, you'll need to get
familiar with [Git and Repo](https://source.android.com/setup/develop/repo).

Set up your build environment

    sudo apt-get install git-core
    git clone https://github.com/akhilnarang/scripts
    cd scripts
    bash setup/android_build_env.sh

Then run these commands to get git all working:

    git config --global user.email "you@example.com"
    git config --global user.name "Your Name"

Create a folder for PegasusOS and open it

    mkdir pegasus
    cd pegasus

To initialize your local repository using the trees, use a command like this:

    repo init -u https://github.com/PegasusOS/android_manifest -b 11

Then to sync up:

    repo sync --force-sync

OR, for those with limited bandwidth/storage:

    repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags

Run this command if you need ccache (one-time only- 100gb ccache setup) 

    ccache -M 100G
    
Run this to enable ccache (each day)

    export USE_CCACHE=1
    export CCACHE_EXEC=$(command -v ccache)

For signed builds you need to generate keys, follow these steps

For AVB-1.0+

    mkdir -p keys/sargo
	cd keys/sargo
	../../development/tools/make_key releasekey '/CN=PegasusOS/'
	../../development/tools/make_key platform '/CN=PegasusOS/'
	../../development/tools/make_key shared '/CN=PegasusOS/'
	../../development/tools/make_key media '/CN=PegasusOS/'
	../../development/tools/make_key networkstack '/CN=PegasusOS/'
	openssl genrsa 4096 | openssl pkcs8 -topk8 -scrypt -out avb.pem
	../../external/avb/avbtool extract_public_key --key avb.pem --output avb_pkmd.bin
	cd ../..

For AVB-1.0

    mkdir -p keys/marlin
	cd keys/marlin
	../../development/tools/make_key releasekey '/CN=PegasusOS/'
	../../development/tools/make_key platform '/CN=PegasusOS/'
	../../development/tools/make_key shared '/CN=PegasusOS/'
	../../development/tools/make_key media '/CN=PegasusOS/'
	../../development/tools/make_key networkstack '/CN=PegasusOS/'
	../../development/tools/make_key verity '/CN=PegasusOS/'
	cd ../..

	make -j8 generate_verity_key
	out/host/linux-x86/bin/generate_verity_key -convert keys/marlin/verity.x509.pem keys/marlin/verity_key
	openssl x509 -outform der -in keys/marlin/verity.x509.pem -out kernel/google/marlin/verifiedboot_marlin_relkeys.der.x509

To Build rom (factory and ota build)

    source script/envsetup.sh
    lunch aosp_marlin-user
	m target-files-package otatools-package && script/release.sh marlin

To Build rom (normal ota zips - not signed)

    source script/envsetup.sh
    lunch aosp_marlin-user
    m otapackage
